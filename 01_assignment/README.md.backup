# 1. Basic linux commands

#### What is shell?
**A shell** is a special user program that provides an interface for the user to use operating system services. Shell accepts **human-readable commands** from users and converts them into something which **the kernel can understand**. It is a command language interpreter that executes commands read from input devices such as keyboards or from files. The shell gets started when the user logs in or starts the terminal.

![Shells|400x400](https://cdn.mindmajix.com/blog/images/linux-0203-1919.png)

Shell can be accessed by users using a command line interface. A special program called Terminal in Linux/macOS, or Command Prompt in Windows OS is provided to type in the human-readable commands such as “cat”, “ls” etc

#### Linux Commands
1. `touch`   create new file
2. `ls` list contents of directory
```bash
$ touch new.txt
$ ls
new.txt
```

3. `pwd` print working directory
```bash
$ pwd
/home/om_d/college/CC
```

4. `mkdir` make directory
5. `cd` change directory
```bash
$ mkdir viit
$ ls
new.txt viit
$ cd viit
$ pwd
/home/om_d/college/CC/viit
```

6. `echo` print message to shell
```bash
$ echo "helllllo"
helllllo
```

7. `cmd > file.txt` pass output of cmd in new created file.txt
8. `cmd >> file.txt` append output of cmd in file.txt
9. `cat` print contents of a file
```bash
$ echo "hellllo world" > file.txt
$ ls
file.txt
$ cat file.txt
hellllo world
```

10. `cp` copy file/directory
11. `mv` move file/directory or rename
12. `rm` remove file/directory
```bash
$ cp file.txt copied_file.txt
$ ls
copied_file.txt file.txt
$ mv file.txt renamed.txt
$ ls
copied_file.txt renamed.txt
$ rm renamed.txt
$ ls
copied_file.txt
```

13. `$var` return value of var
14. `read` read input from user
```bash
$ read var
123
$ echo $var is my input
123 is my input
```

15. `man` see manual of a command
```bash
$ man ls

NAME
       ls - list directory contents

SYNOPSIS
       ls [OPTION]... [FILE]...

DESCRIPTION
       List  information  about the FILEs (the current directory by default).  Sort entries
       alphabetically if none of -cftuvSUX nor --sort is specified.

       Mandatory arguments to long options are mandatory for short options too.

       -a, --all
```

16. `file` checks files type
```bash
$ file copied_file.txt
copied_file.txt: Unicode text, UTF-8 text
```

17. `zip` creates a zip archive
18. `unzip` extracts zip archive
```bash
$ cd ..
$ zip viit.zip viit/*
$ ls
new.txt viit.zip viit
$ unzip viit.zip 
```

19. `tar` Archives files without compression in a TAR format
20. `grep` searches string within a file and returns lines containing string
```bash
$ echo this that >> new.file
$ echo his hat >> new.file
$ echo tis that >> new.file
$ cat new.file
this that
his hat
tis tat
$ grep hat new.file
this that
his hat
```

21. `sed` edits strings in a file
22. `head` prints first n lines in a file
23. `tail` prints last n lines in a file
24. `awk` Finds and manipulates patterns in a file
25. `sort` reorders files content
26. `locate` locates file in system
27. `find` outputs a file or folders location
28. `chmod` change file permission
29. `chown` changes a ownership
30. 